[{"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\index.js":"1","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\reportWebVitals.js":"2","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\App.js":"3","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\index.jsx":"4","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\context.js":"5","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\loginForm.jsx":"6","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\signupForm.jsx":"7","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\common.jsx":"8","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\marginer\\index.jsx":"9"},{"size":500,"mtime":1649402555735,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1649402555766,"results":"12","hashOfConfig":"11"},{"size":423,"mtime":1649402555672,"results":"13","hashOfConfig":"11"},{"size":3879,"mtime":1649404916734,"results":"14","hashOfConfig":"11"},{"size":87,"mtime":1649402555828,"results":"15","hashOfConfig":"11"},{"size":2722,"mtime":1649404819243,"results":"16","hashOfConfig":"11"},{"size":4273,"mtime":1649404171392,"results":"17","hashOfConfig":"11"},{"size":2170,"mtime":1649402555813,"results":"18","hashOfConfig":"11"},{"size":624,"mtime":1649402555906,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c2pau7",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\index.js",[],"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\reportWebVitals.js",[],"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\App.js",["42"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { AccountBox } from \"./components/accountBox\";\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction App() {\n  return (\n    <AppContainer>\n      <AccountBox />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\index.jsx",["43","44"],"import React, { createContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { LoginForm } from \"./loginForm\";\nimport { AccountContext } from \"./context\";\nimport { SignupForm } from \"./signupForm\";\nimport { MutedLink } from \"./common\";\n\nconst BoxContainer = styled.div`\n  width: 280px;\n  min-height: 550px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 19px;\n  background-color: #fff;\n  box-shadow: 0px 0px 2.7px rgba(15, 15, 15, 0.28);\n  position: relative;\n  overflow: hidden;\n`;\n\nconst TopContainer = styled.div`\n  width: 100%;\n  height: 255px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: 0 1.8em;\n  padding-bottom: 5em;\n`;\n\nconst BackDrop = styled(motion.div)`\n  position: absolute;\n  width: 160%;\n  height: 550px;\n  border-radius: 50%;\n  transform: rotate(60deg);\n  top: -290px;\n  left: -70px;\n  background: rgba(241, 196, 15, 1);\n  background: linear-gradient(\n    58deg,\n    rgba(241, 196, 15, 1) 20%,\n    rgba(243, 172, 18, 1) 100%\n  );\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n\nconst HeaderText = styled.h2`\n  font-weight: 600;\n  color: #fff;\n  z-index: 10;\n  margin: 0;\n  font-size: 30px;\n  line-height: 1.24;\n`;\n\nconst SmallText = styled.h5`\n  font-weight: 500;\n  color: #fff;\n  z-index: 10;\n  margin: 0;\n  font-size: 13px;\n  line-height: 1.24;\n`;\n\nconst InnerContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 1.7em;\n`;\n\nconst backdropVariants = {\n  expanded: {\n    width: \"233%\",\n    height: \"1050px\",\n    borderRadius: \"20%\",\n    transform: \"rotate(60deg)\",\n  },\n  collapsed: {\n    width: \"160%\",\n    height: \"550px\",\n    borderRadius: \"50%\",\n    transform: \"rotate(60deg)\",\n  },\n};\n\nconst expandingTransition = {\n  type: \"spring\",\n  duration: 2.3,\n  stiffness: 30,\n};\n\nexport function AccountBox(props) {\n  const [isExpanded, setExpanded] = useState(false);\n  const [active, setActive] = useState(\"signin\");\n\n  const playExpandingEffect = () => {\n    setExpanded(true);\n    /*\n      Collapse it after short amount of time\n      To Finish transition \n    */\n    setTimeout(() => {\n      setExpanded(false);\n    }, expandingTransition.duration * 1000 - 1500);\n  };\n\n  const switchActive = (active) => {\n    setTimeout(() => setActive(active), 400);\n  };\n\n  const switchToSignup = () => {\n    playExpandingEffect();\n    switchActive(\"signup\");\n  };\n\n  const switchToSignin = () => {\n    playExpandingEffect();\n    switchActive(\"signin\");\n  };\n\n  const contextValue = {\n    switchToSignup,\n    switchToSignin,\n    playExpandingEffect,\n  };\n\n  return (\n    <AccountContext.Provider value={contextValue}>\n      <BoxContainer>\n        <TopContainer>\n          <BackDrop\n            variants={backdropVariants}\n            transition={expandingTransition}\n            initial={false}\n            animate={isExpanded ? \"expanded\" : \"collapsed\"}\n          />\n          {active === \"signin\" && (\n            <>\n              <HeaderContainer>\n                <HeaderText>Welcome</HeaderText>\n                <HeaderText>Back To PythonMate</HeaderText>\n              </HeaderContainer>\n              <SmallText>Please sign-in to continue!</SmallText>\n            </>\n          )}\n          {active === \"signup\" && (\n            <>\n              <HeaderContainer>\n                <HeaderText>Create </HeaderText>\n                <HeaderText>Account</HeaderText>\n              </HeaderContainer>\n              <SmallText>Please sign-up to continue!</SmallText>\n            </>\n          )}\n        </TopContainer>\n        <InnerContainer>\n          {active === \"signin\" && <LoginForm />}\n          {active === \"signup\" && <SignupForm />}\n        </InnerContainer>\n      </BoxContainer>\n    </AccountContext.Provider>\n  );\n}\n","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\context.js",[],"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\loginForm.jsx",["45"],"import { Field, useFormik } from \"formik\";\nimport React, { useContext, useState } from \"react\";\nimport { Marginer } from \"../marginer\";\nimport {\n  BoldLink,\n  BoxContainer,\n  FieldContainer,\n  FieldError,\n  FormContainer,\n  FormError,\n  Input,\n  MutedLink,\n  SubmitButton,\n} from \"./common\";\nimport { AccountContext } from \"./context\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst validationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport function LoginForm(props) {\n  const { switchToSignup } = useContext(AccountContext);\n  const [error, setError] = useState(null);\n\n  const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://13.127.127.40/api/token/\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back Please verify your Email first\");\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: { email: \"\", password: \"\" },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema,\n  });\n\n  return (\n    <BoxContainer>\n      <FormError>{error ? error : \"\"}</FormError>\n      <FormContainer onSubmit={formik.handleSubmit}>\n        <FieldContainer>\n          <Input\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          {\n            <FieldError>\n              {formik.touched.email && formik.errors.email\n                ? formik.errors.email\n                : \"\"}\n            </FieldError>\n          }\n        </FieldContainer>\n        <FieldContainer>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          {\n            <FieldError>\n              {formik.touched.password && formik.errors.password\n                ? formik.errors.password\n                : \"\"}\n            </FieldError>\n          }\n        </FieldContainer>\n        <MutedLink href=\"#\">Forgot Password?</MutedLink>\n        <Marginer direction=\"vertical\" margin=\"1em\" />\n        <SubmitButton type=\"submit\" disabled={!formik.isValid}>\n          Login\n        </SubmitButton>\n      </FormContainer>\n      <Marginer direction=\"vertical\" margin={5} />\n      <MutedLink href=\"#\">\n        Dont have an Account?\n        <BoldLink href=\"#\" onClick={switchToSignup}>\n          sign up\n        </BoldLink>\n      </MutedLink>\n    </BoxContainer>\n  );\n}\n","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\signupForm.jsx",["46"],"import { Field, useFormik } from \"formik\";\nimport React, { useContext, useState } from \"react\";\nimport { Marginer } from \"../marginer\";\nimport {\n  BoldLink,\n  BoxContainer,\n  FieldContainer,\n  FieldError,\n  FormContainer,\n  FormSuccess,\n  Input,\n  MutedLink,\n  SubmitButton,\n  FormError,\n} from \"./common\";\nimport { AccountContext } from \"./context\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst PASSWORD_REGEX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n\nconst validationSchema = yup.object({\n  first_name: yup\n    .string()\n    .min(3, \"Please enter you real name\")\n    .required(\"Full name is required!\"),\n    last_name: yup\n    .string()\n    .min(3, \"Please enter you real name\")\n    .required(\"Full name is required!\"),\n  email: yup.string().email(\"Please enter a valid email address\").required(),\n  password: yup\n    .string()\n    .matches(PASSWORD_REGEX, \"Please enter a strong password\")\n    .required(),\n  \n});\n\nexport function SignupForm(props) {\n  const { switchToSignin } = useContext(AccountContext);\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n\n  const onSubmit = async (values) => {\n    const { confirmPassword, ...data } = values;\n\n    const response = await axios\n      .post(\"http://13.127.127.40/api/user/\", data)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n        setSuccess(null);\n      });\n\n    if (response && response.data) {\n      setError(null);\n      setSuccess(response.data.message);\n      formik.resetForm();\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema,\n  });\n\n  console.log(\"Error\", error);\n\n  return (\n    <BoxContainer>\n      {!error && <FormSuccess>{success ? success : \"\"}</FormSuccess>}\n      {!success && <FormError>{error ? error : \"\"}</FormError>}\n      <FormContainer onSubmit={formik.handleSubmit}>\n        <FieldContainer>\n          <Input\n            name=\"first_name\"\n            placeholder=\"First Name\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <FieldError>\n            {formik.touched.first_name && formik.errors.first_name\n              ? formik.errors.first_name\n              : \"\"}\n          </FieldError>\n        </FieldContainer>\n        <FieldContainer>\n          <Input\n            name=\"last_name\"\n            placeholder=\"First Name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <FieldError>\n            {formik.touched.last_name && formik.errors.last_name\n              ? formik.errors.last_name\n              : \"\"}\n          </FieldError>\n        </FieldContainer>\n        <FieldContainer>\n          <Input\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <FieldError>\n            {formik.touched.email && formik.errors.email\n              ? formik.errors.email\n              : \"\"}\n          </FieldError>\n        </FieldContainer>\n        <FieldContainer>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <FieldError>\n            {formik.touched.password && formik.errors.password\n              ? formik.errors.password\n              : \"\"}\n          </FieldError>\n        </FieldContainer>\n       \n        <Marginer direction=\"vertical\" margin=\"1em\" />\n        <SubmitButton type=\"submit\" disabled={!formik.isValid}>\n          Signup\n        </SubmitButton>\n      </FormContainer>\n      <Marginer direction=\"vertical\" margin={5} />\n      <MutedLink href=\"#\">\n        Already have an account?\n        <BoldLink href=\"#\" onClick={switchToSignin}>\n          sign in\n        </BoldLink>\n      </MutedLink>\n    </BoxContainer>\n  );\n}\n","C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\accountBox\\common.jsx",[],"C:\\Users\\rahulbchoudhary\\Desktop\\PythonMate\\src\\components\\marginer\\index.jsx",[],{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":30},{"ruleId":"47","severity":1,"message":"52","line":7,"column":10,"nodeType":"49","messageId":"50","endLine":7,"endColumn":19},{"ruleId":"47","severity":1,"message":"53","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":15},{"ruleId":"47","severity":1,"message":"53","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'MutedLink' is defined but never used.","'Field' is defined but never used."]